#!/bin/bash
# Monitoring Dashboard - Display system and profile stats

# Load config
if [ -f /etc/vpn-system.conf ]; then
    source /etc/vpn-system.conf
fi

VPN_HOME="${VPN_HOME:-/opt/multi-profile-vpn}"
DB_PATH="${DB_PATH:-$VPN_HOME/data/app.db}"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

clear
echo -e "${CYAN}╔══════════════════ MONITORING DASHBOARD ═════════════════╗${NC}"
echo ""

# System Stats
echo -e "${WHITE}SYSTEM STATISTICS:${NC}"
echo -e "  CPU Usage: $(top -bn1 | grep 'Cpu(s)' | awk '{print $2}')%"
echo -e "  RAM Usage: $(free -m | awk 'NR==2{printf "%sMB / %sMB (%.1f%%)", $3, $2, $3*100/$2}')"
echo -e "  Disk Usage: $(df -h / | awk 'NR==2{printf "%s / %s (%s)", $3, $2, $5}')"
echo ""

# Profile Stats
echo -e "${WHITE}PROFILE STATISTICS:${NC}"
total_profiles=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles;" 2>/dev/null || echo "0")
active_profiles=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles WHERE status='active';" 2>/dev/null || echo "0")
stopped_profiles=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles WHERE status='stopped';" 2>/dev/null || echo "0")

echo -e "  Total Profiles: ${GREEN}$total_profiles${NC}"
echo -e "  Active: ${GREEN}$active_profiles${NC}"
echo -e "  Stopped: ${YELLOW}$stopped_profiles${NC}"
echo ""

# Bandwidth Usage
echo -e "${WHITE}BANDWIDTH USAGE:${NC}"
sqlite3 "$DB_PATH" "SELECT name, quota_used_gb, bandwidth_quota_gb FROM profiles ORDER BY quota_used_gb DESC LIMIT 5;" 2>/dev/null | while IFS='|' read -r name used quota; do
    used_tb=$(echo "scale=2; $used / 1024" | bc 2>/dev/null || echo "0")
    quota_tb=$(echo "scale=2; $quota / 1024" | bc 2>/dev/null || echo "0")
    percent=$(echo "scale=1; ($used / $quota) * 100" | bc 2>/dev/null || echo "0")
    
    if [ $(echo "$percent > 90" | bc) -eq 1 ]; then
        color=$RED
    elif [ $(echo "$percent > 70" | bc) -eq 1 ]; then
        color=$YELLOW
    else
        color=$GREEN
    fi
    
    printf "  %-15s ${color}%6.2f TB${NC} / %6.2f TB (%5.1f%%)\n" "$name" "$used_tb" "$quota_tb" "$percent"
done
echo ""

# Expiring Soon
echo -e "${WHITE}EXPIRING SOON (< 7 days):${NC}"
expiring=$(sqlite3 "$DB_PATH" "SELECT name, expiry_date FROM profiles WHERE julianday(expiry_date) - julianday('now') < 7 AND julianday(expiry_date) - julianday('now') >= 0 ORDER BY expiry_date;" 2>/dev/null)

if [ -z "$expiring" ]; then
    echo -e "  ${GREEN}No profiles expiring soon${NC}"
else
    echo "$expiring" | while IFS='|' read -r name expiry; do
        days_left=$(( ($(date -d "$expiry" +%s) - $(date +%s)) / 86400 ))
        
        if [ $days_left -lt 3 ]; then
            color=$RED
        else
            color=$YELLOW
        fi
        
        echo -e "  ${color}$name${NC}: $days_left days remaining ($expiry)"
    done
fi
echo ""

# Recent Health Checks
echo -e "${WHITE}RECENT HEALTH CHECKS:${NC}"
sqlite3 "$DB_PATH" "SELECT profile_name, check_type, status, checked_at FROM health_checks ORDER BY checked_at DESC LIMIT 5;" 2>/dev/null | while IFS='|' read -r name check_type status checked_at; do
    if [ "$status" = "ok" ] || [ "$status" = "healthy" ]; then
        status_color=$GREEN
    else
        status_color=$RED
    fi
    
    echo -e "  [$checked_at] ${WHITE}$name${NC} - $check_type: ${status_color}$status${NC}"
done

echo ""
echo -e "${CYAN}╚══════════════════════════════════════════════════════════╝${NC}"
