#!/bin/bash
# Multi-Profile VPN - Monitoring Dashboard
# Show system and profile statistics

# Load config
if [ -f /etc/vpn-system.conf ]; then
    source /etc/vpn-system.conf
fi

VPN_HOME="${VPN_HOME:-/opt/multi-profile-vpn}"
DB_PATH="${DB_PATH:-$VPN_HOME/data/app.db}"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

clear

echo -e "${CYAN}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e "${CYAN}║                MONITORING DASHBOARD                      ║${NC}"
echo -e "${CYAN}╚══════════════════════════════════════════════════════════╝${NC}"
echo ""

# System Info
echo -e "${WHITE}╔══ SYSTEM RESOURCES ══╗${NC}"
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
CPU_CORES=$(nproc)
RAM_INFO=$(free -h | awk 'NR==2{printf "%s/%s", $3, $2}')
DISK_INFO=$(df -h / | awk 'NR==2{printf "%s/%s (%s)", $3, $2, $5}')
UPTIME=$(uptime -p)

echo -e "  CPU    : ${GREEN}$CPU_USAGE%${NC} of $(($CPU_CORES * 100))% ($CPU_CORES cores)"
echo -e "  RAM    : ${GREEN}$RAM_INFO${NC}"
echo -e "  Disk   : ${GREEN}$DISK_INFO${NC}"
echo -e "  Uptime : ${CYAN}$UPTIME${NC}"
echo ""

# Profile Statistics
echo -e "${WHITE}╔══ PROFILE STATISTICS ══╗${NC}"
TOTAL_PROFILES=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles;" 2>/dev/null || echo "0")
ACTIVE_PROFILES=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles WHERE status='active';" 2>/dev/null || echo "0")
EXPIRED_PROFILES=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profiles WHERE expiry_date < date('now');" 2>/dev/null || echo "0")
TOTAL_ACCOUNTS=$(sqlite3 "$DB_PATH" "SELECT COUNT(*) FROM profile_accounts;" 2>/dev/null || echo "0")

echo -e "  Total Profiles  : ${CYAN}$TOTAL_PROFILES${NC}"
echo -e "  Active Profiles : ${GREEN}$ACTIVE_PROFILES${NC}"
echo -e "  Expired Profiles: ${RED}$EXPIRED_PROFILES${NC}"
echo -e "  Total Accounts  : ${CYAN}$TOTAL_ACCOUNTS${NC}"
echo ""

# Bandwidth Usage
echo -e "${WHITE}╔══ BANDWIDTH USAGE (TOP 5) ══╗${NC}"
sqlite3 "$DB_PATH" "SELECT name, ROUND(quota_used_gb/1024.0, 2) || 'TB', ROUND(bandwidth_quota_gb/1024.0, 2) || 'TB' FROM profiles ORDER BY quota_used_gb DESC LIMIT 5;" 2>/dev/null | \
while IFS='|' read -r name used quota; do
    echo -e "  ${CYAN}$name${NC}: ${GREEN}$used${NC} / ${YELLOW}$quota${NC}"
done
echo ""

# Expiring Soon
echo -e "${WHITE}╔══ EXPIRING SOON (7 DAYS) ══╗${NC}"
sqlite3 "$DB_PATH" "SELECT name, expiry_date, CAST((julianday(expiry_date) - julianday('now')) AS INTEGER) as days_left FROM profiles WHERE expiry_date >= date('now') AND expiry_date <= date('now', '+7 days') ORDER BY expiry_date;" 2>/dev/null | \
while IFS='|' read -r name expiry days; do
    if [ "$days" -lt 3 ]; then
        echo -e "  ${CYAN}$name${NC}: ${RED}$days days${NC} (expires: $expiry)"
    else
        echo -e "  ${CYAN}$name${NC}: ${YELLOW}$days days${NC} (expires: $expiry)"
    fi
done || echo -e "  ${GREEN}No profiles expiring soon${NC}"
echo ""

# Docker Containers
echo -e "${WHITE}╔══ DOCKER CONTAINERS ══╗${NC}"
RUNNING_CONTAINERS=$(docker ps --filter "name=vpn-" --format "{{.Names}}" | wc -l)
STOPPED_CONTAINERS=$(docker ps -a --filter "name=vpn-" --filter "status=exited" --format "{{.Names}}" | wc -l)

echo -e "  Running : ${GREEN}$RUNNING_CONTAINERS${NC}"
echo -e "  Stopped : ${RED}$STOPPED_CONTAINERS${NC}"
echo ""

# Recent Actions
echo -e "${WHITE}╔══ RECENT ACTIONS (LAST 5) ══╗${NC}"
sqlite3 "$DB_PATH" "SELECT action_type, created_at, status FROM action_history ORDER BY created_at DESC LIMIT 5;" 2>/dev/null | \
while IFS='|' read -r action time status; do
    if [ "$status" = "success" ]; then
        echo -e "  ${GREEN}✓${NC} ${CYAN}$action${NC} - $time"
    else
        echo -e "  ${RED}✗${NC} ${CYAN}$action${NC} - $time"
    fi
done || echo -e "  ${YELLOW}No recent actions${NC}"
echo ""
